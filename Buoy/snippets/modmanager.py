import tkinter

def _create_mod_manager_tab(buoy):
    mod_manager_frame = tkinter.ttk.Frame(buoy.notebook)
    buoy.notebook.add(mod_manager_frame, text='Mod Manager')
    mod_manager_frame.grid_columnconfigure(0, weight=1)
    mod_manager_frame.grid_columnconfigure(1, weight=0)
    mod_manager_frame.grid_columnconfigure(2, weight=1)
    mod_manager_frame.grid_rowconfigure(0, weight=3)
    mod_manager_frame.grid_rowconfigure(1, weight=1)
    available_frame = tkinter.ttk.LabelFrame(mod_manager_frame, text='Thunderstore Mods (0)')
    buoy.available_frame = available_frame
    available_frame.grid(row=0, column=0, padx=5, pady=5, sticky='nsew')
    available_frame.grid_columnconfigure(0, weight=1)
    available_frame.grid_rowconfigure(0, weight=0)
    available_frame.grid_rowconfigure(1, weight=0)
    available_frame.grid_rowconfigure(2, weight=1)
    search_frame = tkinter.ttk.Frame(available_frame)
    search_frame.grid(row=0, column=0, sticky='ew', padx=2, pady=2)
    search_frame.grid_columnconfigure(1, weight=1)
    tkinter.ttk.Label(search_frame, text='Search:').grid(row=0, column=0, padx=5)
    buoy.search_var = tk.StringVar()
    buoy.search_var.trace('w', lambda name, index, mode: buoy.filter_available_mods())
    search_entry = tkinter.ttk.Entry(search_frame, textvariable=buoy.search_var)
    search_entry.grid(row=0, column=1, sticky='ew', padx=5)
    buoy.advanced_filters_visible = tk.BooleanVar(value=False)
    tkinter.ttk.Button(search_frame, text='Advanced Filters', command=buoy.toggle_advanced_filters).grid(row=0, column=2, padx=5)
    buoy.filter_frame = tkinter.ttk.LabelFrame(available_frame, text='Advanced Filters')
    category_frame = tkinter.ttk.Frame(buoy.filter_frame)
    category_frame.pack(fill='x', padx=5, pady=2)
    tkinter.ttk.Label(category_frame, text='Category:').pack(side='left', padx=5)
    buoy.available_category = tkinter.ttk.Combobox(category_frame, state='readonly')
    buoy.available_category.pack(side='left', fill='x', expand=True, padx=5)
    buoy.available_category.bind('<<ComboboxSelected>>', lambda e: buoy.filter_available_mods())
    sort_frame = tkinter.ttk.Frame(buoy.filter_frame)
    sort_frame.pack(fill='x', padx=5, pady=2)
    tkinter.ttk.Label(sort_frame, text='Sort:').pack(side='left', padx=5)
    buoy.sort_method = tkinter.ttk.Combobox(sort_frame, state='readonly', values=['Last Updated', 'Most Downloads', 'Most Likes', 'Name (A-Z)', 'Name (Z-A)'], textvariable=buoy.available_sort_by)
    buoy.sort_method.pack(side='left', fill='x', expand=True, padx=5)
    buoy.sort_method.bind('<<ComboboxSelected>>', lambda e: (buoy.filter_available_mods(), buoy.save_sort_preferences()))
    toggle_frame = tkinter.ttk.Frame(buoy.filter_frame)
    toggle_frame.pack(fill='x', padx=5, pady=2)
    tkinter.ttk.Checkbutton(toggle_frame, text='Show NSFW', variable=buoy.show_nsfw, command=lambda: buoy.handle_filter_toggle('nsfw')).pack(side='left', padx=5)
    tkinter.ttk.Checkbutton(toggle_frame, text='Show Deprecated', variable=buoy.show_deprecated, command=lambda: buoy.handle_filter_toggle('deprecated')).pack(side='left', padx=5)
    buoy.available_listbox = tk.Listbox(available_frame, width=30, height=15, selectmode=tk.EXTENDED)
    buoy.available_listbox.grid(row=2, column=0, pady=(2, 2), padx=2, sticky='nsew')
    buoy.available_listbox.bind('<<ListboxSelect>>', buoy.on_available_listbox_select)
    buoy.available_listbox.bind('<Button-3>', buoy.show_context_menu)
    scrollbar = tkinter.ttk.Scrollbar(available_frame, orient='vertical', command=buoy.available_listbox.yview)
    scrollbar.grid(row=2, column=1, sticky='ns')
    buoy.available_listbox.configure(yscrollcommand=scrollbar.set)
    action_frame = tkinter.ttk.Frame(mod_manager_frame)
    action_frame.grid(row=0, column=1, padx=5, pady=5, sticky='ns')
    action_frame.grid_columnconfigure(0, weight=1)
    buoy.game_management_frame = tkinter.ttk.LabelFrame(action_frame, text='Launch Game')
    buoy.game_management_frame.grid(row=1, column=0, pady=5, padx=5, sticky='ew')
    buoy.game_management_frame.grid_columnconfigure(0, weight=1)
    buoy.game_management_frame.grid_columnconfigure(1, weight=1)
    tkinter.ttk.Button(buoy.game_management_frame, text='Modded', command=buoy.launch_modded).grid(row=0, column=0, pady=2, padx=2, sticky='ew')
    tkinter.ttk.Button(buoy.game_management_frame, text='Vanilla', command=buoy.launch_vanilla).grid(row=0, column=1, pady=2, padx=2, sticky='ew')
    buoy.mod_management_frame = tkinter.ttk.LabelFrame(action_frame, text='Mod Management')
    buoy.mod_management_frame.grid(row=2, column=0, pady=5, padx=5, sticky='ew')
    buoy.mod_management_frame.grid_columnconfigure(0, weight=1)
    buoy.mod_management_frame.grid_columnconfigure(1, weight=1)
    tkinter.ttk.Button(buoy.mod_management_frame, text='Install', command=buoy.install_mod).grid(row=0, column=0, pady=2, padx=2, sticky='ew')
    tkinter.ttk.Button(buoy.mod_management_frame, text='Uninstall', command=buoy.uninstall_mod).grid(row=0, column=1, pady=2, padx=2, sticky='ew')
    tkinter.ttk.Button(buoy.mod_management_frame, text='Enable', command=buoy.enable_mod).grid(row=1, column=0, pady=2, padx=2, sticky='ew')
    tkinter.ttk.Button(buoy.mod_management_frame, text='Disable', command=buoy.disable_mod).grid(row=1, column=1, pady=2, padx=2, sticky='ew')
    tkinter.ttk.Button(buoy.mod_management_frame, text='Edit Config', command=buoy.edit_mod_config).grid(row=2, column=0, pady=2, padx=2, sticky='ew')
    tkinter.ttk.Button(buoy.mod_management_frame, text='Version', command=buoy.show_version_selection).grid(row=2, column=1, pady=2, padx=2, sticky='ew')
    misc_frame = tkinter.ttk.LabelFrame(action_frame, text='Misc')
    misc_frame.grid(row=3, column=0, pady=5, padx=5, sticky='ew')
    misc_frame.grid_columnconfigure(0, weight=1)
    tkinter.ttk.Button(misc_frame, text='Import .zip Mods', command=buoy.import_zip_mod).grid(row=0, column=0, padx=2, pady=2, sticky='ew')
    tkinter.ttk.Button(misc_frame, text='Refresh Mods', command=buoy.refresh_all_mods).grid(row=1, column=0, pady=2, padx=2, sticky='ew')
    tkinter.ttk.Button(misc_frame, text='Check for Mod Updates', command=buoy.check_for_updates).grid(row=2, column=0, pady=2, padx=2, sticky='ew')
    tkinter.ttk.Button(misc_frame, text='Join Discord', command=lambda: webbrowser.open('https://discord.gg/7HdZJZbkhw')).grid(row=3, column=0, padx=2, pady=2, sticky='ew')
    installed_frame = tkinter.ttk.LabelFrame(mod_manager_frame, text='Installed Mods (0)')
    buoy.installed_frame = installed_frame
    installed_frame.grid(row=0, column=2, padx=5, pady=5, sticky='nsew')
    installed_search_frame = tkinter.ttk.Frame(installed_frame)
    installed_search_frame.grid(row=0, column=0, sticky='ew', padx=2, pady=2)
    installed_search_frame.grid_columnconfigure(1, weight=1)
    tkinter.ttk.Label(installed_search_frame, text='Search:').grid(row=0, column=0, padx=5)
    buoy.installed_search_var = tk.StringVar()
    buoy.installed_search_var.trace('w', lambda name, index, mode: buoy.filter_installed_mods())
    installed_search_entry = tkinter.ttk.Entry(installed_search_frame, textvariable=buoy.installed_search_var)
    installed_search_entry.grid(row=0, column=1, sticky='ew', padx=5)
    buoy.installed_filters_visible = tk.BooleanVar(value=False)
    tkinter.ttk.Button(installed_search_frame, text='Advanced Filters', command=buoy.toggle_installed_filters).grid(row=0, column=2, padx=5)
    buoy.installed_filter_frame = tkinter.ttk.LabelFrame(installed_frame, text='Advanced Filters')
    installed_filter_frame = tkinter.ttk.Frame(buoy.installed_filter_frame)
    installed_filter_frame.pack(fill='x', padx=5, pady=2)
    tkinter.ttk.Label(installed_filter_frame, text='Category:').pack(side='left', padx=5)
    buoy.installed_category = tkinter.ttk.Combobox(installed_filter_frame, state='readonly')
    buoy.installed_category.pack(side='left', fill='x', expand=True, padx=5)
    buoy.installed_category.bind('<<ComboboxSelected>>', buoy.filter_installed_mods)
    installed_sort_frame = tkinter.ttk.Frame(buoy.installed_filter_frame)
    installed_sort_frame.pack(fill='x', padx=5, pady=2)
    tkinter.ttk.Label(installed_sort_frame, text='Sort:').pack(side='left', padx=5)
    buoy.installed_sort_method = tkinter.ttk.Combobox(installed_sort_frame, state='readonly', values=['Name (A-Z)', 'Name (Z-A)', 'Recently Updated', 'Recently Installed'], textvariable=buoy.installed_sort_by)
    buoy.installed_sort_method.pack(side='left', fill='x', expand=True, padx=5)
    buoy.installed_sort_method.bind('<<ComboboxSelected>>', lambda e: (buoy.filter_installed_mods(), buoy.save_sort_preferences()))
    buoy.hide_third_party = tk.BooleanVar(value=False)
    tkinter.ttk.Checkbutton(buoy.installed_filter_frame, text='Hide 3rd Party', variable=buoy.hide_third_party, command=buoy.filter_installed_mods).pack(fill='x', padx=5, pady=2)
    buoy.installed_listbox = tk.Listbox(installed_frame, width=30, height=15, selectmode=tk.EXTENDED)
    installed_scrollbar = tkinter.ttk.Scrollbar(installed_frame, orient='vertical', command=buoy.installed_listbox.yview)
    buoy.installed_listbox.configure(yscrollcommand=installed_scrollbar.set)
    buoy.installed_listbox.grid(row=2, column=0, pady=2, padx=2, sticky='nsew')
    installed_scrollbar.grid(row=2, column=1, pady=2, sticky='ns')
    buoy.installed_listbox.bind('<<ListboxSelect>>', lambda e: (buoy.update_mod_details(e), buoy.update_button_states()))
    buoy.installed_listbox.bind('<Button-3>', buoy.show_context_menu)
    installed_frame.grid_columnconfigure(0, weight=1)
    installed_frame.grid_rowconfigure(2, weight=1)
    buoy.mod_details_frame = tkinter.ttk.LabelFrame(mod_manager_frame, text='Mod Details')
    buoy.mod_details_frame.grid(row=1, column=0, columnspan=3, padx=5, pady=5, sticky='nsew')
    buoy.mod_image = tkinter.ttk.Label(buoy.mod_details_frame)
    buoy.mod_image.grid(row=0, column=0, padx=5, pady=5, sticky='nw')
    buoy.mod_details = tk.Text(buoy.mod_details_frame, wrap=tk.WORD, height=12, state='disabled')
    buoy.mod_details.grid(row=0, column=1, pady=2, padx=2, sticky='nsew')
    buoy.mod_details_frame.grid_columnconfigure(1, weight=1)
    buoy.mod_details_frame.grid_rowconfigure(0, weight=1)
    buoy.update_button_states()
